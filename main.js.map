{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/array1/array1.component.css","webpack:///./src/app/array1/array1.component.html","webpack:///./src/app/array1/array1.component.ts","webpack:///./src/app/array2/array2.component.css","webpack:///./src/app/array2/array2.component.html","webpack:///./src/app/array2/array2.component.ts","webpack:///./src/app/componentname/componentname.component.css","webpack:///./src/app/componentname/componentname.component.html","webpack:///./src/app/componentname/componentname.component.ts","webpack:///./src/app/computer/computer.component.css","webpack:///./src/app/computer/computer.component.html","webpack:///./src/app/computer/computer.component.ts","webpack:///./src/app/demo/demo.component.css","webpack:///./src/app/demo/demo.component.html","webpack:///./src/app/demo/demo.component.ts","webpack:///./src/app/externaljson/externaljson.component.css","webpack:///./src/app/externaljson/externaljson.component.html","webpack:///./src/app/externaljson/externaljson.component.ts","webpack:///./src/app/footer/footer.component.css","webpack:///./src/app/footer/footer.component.html","webpack:///./src/app/footer/footer.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/item/item.component.css","webpack:///./src/app/item/item.component.html","webpack:///./src/app/item/item.component.ts","webpack:///./src/app/photo/photo.component.css","webpack:///./src/app/photo/photo.component.html","webpack:///./src/app/photo/photo.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n\\n<div class=\\\"container pageheight\\\">\\n    <router-outlet></router-outlet>   \\n</div>\\n\\n<app-footer></app-footer>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'myapp1';\n\n  city:string = \"Bengaluru\";\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';  //to use the ngModel we have to add this line.\n\nimport {RouterModule, Routes} from '@angular/router'; // to use routing (or page navigation)\n\n\nimport { Ng2SearchPipeModule } from 'ng2-search-filter'; //for search filter\n\n// For data communication use API (to read the data from other source)\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ComponentnameComponent } from './componentname/componentname.component';\nimport { UserComponent } from './user/user.component';\nimport { PhotoComponent } from './photo/photo.component';\nimport { Array1Component } from './array1/array1.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { Array2Component } from './array2/array2.component';\nimport { ItemComponent } from './item/item.component';\nimport { ComputerComponent } from './computer/computer.component';\nimport { ExternaljsonComponent } from './externaljson/externaljson.component';\nimport { DemoComponent } from './demo/demo.component';\n\n\n // generate page url\n // http://localhost:4200/dashboard\n // http://localhost:4200         redirect to dashboard (if path is empty)\n // http://localhost:4200/aaaaa      redirect to dashboard (if path has illegal entry)\n\n  const allpage : Routes = [\n                       { path:\"demo\", component: DemoComponent },\n                       { path:\"dashboard\", component: Array1Component },\n                       { path:\"itemlist\", component: ItemComponent },\n                       { path:\"computer\", component: ComputerComponent },\n                       { path:\"userlist\", component: UserComponent },\n                       { path:\"photolist\", component: PhotoComponent },\n                       { path:\"carlist\", component: ExternaljsonComponent },\n                       { path:\"\", redirectTo: \"/dashboard\", pathMatch:\"full\" },\n                       { path:\"\", redirectTo: \"/dashboard\", pathMatch:\"full\" },\n                       { path:\"componentname\", component: ComponentnameComponent },\n  ];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ComponentnameComponent,\n    UserComponent,\n    PhotoComponent,\n    Array1Component,\n    HeaderComponent,\n    FooterComponent,\n    Array2Component,\n    ItemComponent,\n    ComputerComponent,\n    ExternaljsonComponent,\n    DemoComponent\n  ],\n  imports: [\n    BrowserModule, \n    FormsModule,                      // object created here\n    RouterModule.forRoot(allpage),      // object created here\n    HttpModule,                          // object created here\n    HttpClientModule,                      // object created here\n    Ng2SearchPipeModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <table class=\\\"table table-borderd\\\">\\n    <caption><h2>Array 1 Example {{total}} </h2></caption>\\n      <tr>\\n        <th>Item Name</th>\\n        <td> <input type=\\\"text\\\" #name class=\\\"form-control\\\"> </td>\\n        <td> <button (click)=\\\"saveitem(name.value)\\\" class=\\\"btn btn-primary\\\">Save</button> </td>\\n      </tr>\\n    </table>\\n\\n    <h3 align=\\\"center\\\">Item List</h3>\\n      <table class=\\\"table table-borderd\\\">\\n        <tr *ngFor=\\\"let x of allitem; let i=index\\\">\\n          <td> {{x}} </td>\\n          <td> <button (click)=\\\"deleteitem(i)\\\" class=\\\"btn btn-danger\\\"> Delete </button> </td>\\n        </tr>\\n      </table>\\n</div> \\n<!-- col-4 end -->\\n  <div class=\\\"col-md-8\\\">\\n    <app-array2></app-array2>\\n  </div>\\n  \\n</div>  \\n<!-- row end -->\\n\\n<div class=\\\"row\\\">\\n <div class=\\\"col-md-6\\\">\\n  <p class=\\\"text-center\\\"> {{msg}} </p> \\n  <label> Example for ngModal </label>\\n   <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)] = \\\"proname\\\">\\n   <div class=\\\"text-center\\\">\\n     <button class=\\\"btn btn-success\\\" (click)=\\\"saveproduct()\\\">Save Pro</button>\\n   </div>\\n </div>\\n <div class=\\\"col-md-6\\\">\\n   <p *ngFor = \\\"let pro of product\\\"> {{pro}} </p>\\n   \\n </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-array1',\n  templateUrl: './array1.component.html',\n  styleUrls: ['./array1.component.css']\n})\nexport class Array1Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n// total:number=0;\nallitem:any[]= [\"Apple\", \"Mango\"];\ntotal:number = this.allitem.length;\n\nsaveitem(itemname:string)  \n{\n  this.allitem.push(itemname);\n  this.total = this.allitem.length;\n}\n\ndeleteitem(index:number)\n{\n  this.allitem.splice(index,1);  //to remove item from array\n  this.total = this.allitem.length;\n}\n\nproname:string;\nproduct:any[]=[];\nmsg:string;\n\nsaveproduct()\n{\n  // alert(this.proname);\n  this.product.push(this.proname);\n  this.proname=\"\";\n  this.msg = \"product Added Succesafully .!\";\n}\n}\n","module.exports = \"\"","module.exports = \"<table class=\\\"table table-bordered\\\"> \\n  <caption class=\\\"text-center\\\"> <h3>Array 2 Example</h3> </caption>\\n  <tr>\\n    <th>Full Name</th>\\n    <th>Mobile No</th>\\n    <th>City</th>\\n    <th>Action</th>\\n  </tr>\\n\\n  <tr>\\n    <td> <input type=\\\"text\\\" #name class=\\\"form-comtrol input-sm\\\"></td>\\n    <td> <input type=\\\"text\\\" #mobile class=\\\"form-comtrol input-sm\\\"></td>\\n    <td> <input type=\\\"text\\\" #city class=\\\"form-comtrol input-sm\\\"></td>\\n    <td> <button class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"save(name.value, mobile.value, city.value)\\\">Save</button></td>\\n  </tr>\\n\\n  <tr *ngFor=\\\"let row of user; let i=index\\\"> \\n     <td>{{row.name}}</td>\\n     <td>{{row.mobile}}</td>\\n     <td>{{row.city}}</td>\\n     <td> <button (click)=\\\"deluser(i)\\\">Delete</button> </td>\\n  </tr>\\n</table>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-array2',\n  templateUrl: './array2.component.html',\n  styleUrls: ['./array2.component.css']\n})\nexport class Array2Component implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\nuser:any[]= [\n             {\"name\":\"AAA\", \"mobile\":\"7878\", \"city\":\"Bangalore\"},\n             {\"name\":\"BBB\", \"mobile\":\"778878\", \"city\":\"Mumbai\"},\n             {\"name\":\"CCC\", \"mobile\":\"657878\", \"city\":\"Delhi\"},\n             {\"name\":\"DDD\", \"mobile\":\"217878\", \"city\":\"Kolkata\"}\n    ]\nsave(name:string, mobile:number, city:string)\n{\n var newuser = {\"name\":name, \"mobile\":mobile, \"city\":city}\n this.user = this.user.concat(newuser);  // to combine array inside array\n}\n\ndeluser(index:number)\n{\n  this.user.splice(index,1);  //to remove item from array\n  \n}\n} //class ends here","module.exports = \"\"","module.exports = \"\\n    <div class=\\\"row\\\">\\n\\n        <div class=\\\"col-md-5 col-lg-6\\\">\\n          <div class=\\\"panel panel-primary\\\" >\\n            <div class=\\\"panel-heading text-center\\\">\\n              Ankit Gupta\\n            </div>\\n            <div class=\\\"panel-body\\\">\\n              <table class=\\\"table table-bordered\\\"  *ngFor = \\\"let row of allcar; let i=index;\\\">\\n                <caption> {{ row.name }} </caption>\\n                <tr  *ngFor = \\\"let rowdata of row.policies; let i2=index\\\">\\n                    <td (click)=\\\"getdata(i, i2,rowdata.type)\\\">{{rowdata.type}}</td>\\n                    <td>{{rowdata.number}}</td>\\n                    <td> {{ rowdata.logo }} </td>\\n                    <td> {{ rowdata.icon }} </td>\\n                </tr>\\n              </table>\\n            </div>\\n          </div>   \\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <h2> Motor </h2>\\n          <h4> Summary of Cover </h4>\\n          <div class=\\\"panel panel-primary\\\">\\n              <div class=\\\"panel-heading text-center\\\">\\n                Ankit Gupta\\n              </div>\\n              <div class=\\\"panel-body\\\">\\n                <table class=\\\"table table-bordered\\\">\\n                  <tr>\\n                    <th> Type </th>\\n                    <th> \\tName </th>\\n                    <th> Value </th>\\n                    <th> Basic Excess </th>\\n                    <th>\\tPremium </th>\\n                  </tr>\\n                  <tr>\\n                    <td> {{ showdata.type }} </td>\\n                    <td> {{ showdata.name }} </td>\\n                    <td> {{ showdata.value }} </td>\\n                    <td> {{ showdata.basicExcess }} </td>\\n                    <td> {{ showdata.premium }} </td>\\n                  </tr>\\n                  <tr>\\n                      <td>Total Vehicle SASRIA</td>\\n                      <td> </td>\\n                      <td> </td>\\n                      <td> </td>\\n                      <!-- <td> {{ showdata.brokeragePercentage }} </td> -->\\n                  </tr>\\n                  <tr>\\n                      <td>Broker Fee </td>\\n                      <td> </td>\\n                      <td> </td>\\n                      <td> </td>\\n                      <td> {{ showdata.brokeragePercentage }} </td>\\n                  </tr>\\n                  <tr>\\n                      <td> Total Monthly Payment </td>\\n                      <td> </td>\\n                      <td> </td>\\n                      <td> </td>\\n                      <td> {{ showdata.brokeragePercentage }} </td>\\n                  </tr>\\n                </table>\\n                <table class=\\\"table table-bordered\\\">\\n                    <tr>\\n                      <th> Section </th>\\n                      <th> \\tInsured Item </th>\\n                      <th> Value </th>\\n                      <th> Basic Excess </th>\\n                      <th>\\tPremium </th>\\n                    </tr>\\n                    <tr *ngFor = \\\"let d of Motor\\\">\\n                      <td> {{ d.name }} </td>\\n                      <td> {{ d.id }} </td>\\n                      <td> {{ d.icon }} </td>\\n                      <td> {{ d.icon2 }} </td>\\n                      <td> {{ d.icon3 }} </td>\\n                      <td> {{ d.icon4 }} </td>\\n                      <td> {{ d.premium }} </td>\\n                    </tr>\\n                  </table>\\n              </div>\\n            </div>\\n        </div>\\n      </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n// <script src=\"https://kit.fontawesome.com/a076d05399.js\"></script>\n// import \n\n \n  \n\n\n@Component({\n  selector: 'app-componentname',\n  templateUrl: './componentname.component.html',\n  styleUrls: ['./componentname.component.css']\n})\nexport class ComponentnameComponent implements OnInit {\n\n  constructor(\n    private obj:HttpClient\n  ) { }\n \n  // Life : boolean = false;\n  // Motorr : boolean = false;\n \n  ngOnInit() {\n    this.getCar();  \n  }\n  \n  allcar;\n  getCar()\n  {\n    var url = \"http://34.73.45.188:4500/api/getPolicy?type=policynumber\";       \n    //  net required to run this code\n    \n    this.obj.get(url).subscribe (\n      response => {\n        this.allcar = response as string[];\n      });\n  }\n  Motor;\n  showdata ;\n  getdata(index:number, index2:number, type:string)\n  {\n     this.showdata = this.allcar.data[index].policies[index2].coverage;\n     console.log(this.showdata);\n     console.log(index);\n     console.log(index2);\n     console.log(type);\n  }\n  \n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div col-md-12>\\n      <h1 class=\\\"text-center\\\"> Description Of Computers </h1>\\n  </div>\\n</div>\\n<br>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n\\n    <div class=\\\"form-group\\\">\\n      <label> Name </label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)] = \\\"Cname\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label> Description </label>\\n      <textarea cols=\\\"30\\\" rows=\\\"10\\\" class=\\\"form-control\\\" [(ngModel)] = \\\"Description\\\"></textarea>\\n    </div>\\n\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-primary\\\"  (click)=\\\"save()\\\"> {{btntitle}} </button>\\n    </div>\\n  </div>\\n<!-- col 4 end here -->\\n\\n  <div class=\\\"col-md-8\\\">\\n    <table class=\\\"table table-bordered\\\">\\n      <tr>\\n        <th>Name</th>\\n        <th>Description</th>\\n      </tr>\\n      <tr *ngFor = \\\"let row of list\\\">   <!--Let any name and array name-->\\n        <td>{{row.name}}</td>\\n        <td>{{row.Description}}</td>\\n      </tr>\\n    </table>\\n  </div>\\n  <!-- col 8 end here -->\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-computer',\n  templateUrl: './computer.component.html',\n  styleUrls: ['./computer.component.css']\n})\nexport class ComputerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  btntitle:string = \"Update List\";\n\n  list:any[] = [\n           {\"name\":\"DELL\", \"Description\":\"8GB RAM\"},\n           {\"name\":\"LG\", \"Description\":\"8GB RAM\"},\n           {\"name\":\"Samsung\", \"Description\":\"8GB RAM\"}\n  ];\n  Cname:string;\n  Description:string;\n  \n  save() \n  {\n   var newitem = {\"name\":this.Cname, \"Description\":this.Description};\n    this.list = this.list.concat(newitem);  // to add  in existing array\n    this.Cname=\"\";\n    this.Description=\"\";\n    \n}\n}","module.exports = \"\"","module.exports = \"<p>\\n  demo works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.css']\n})\nexport class DemoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <h1 class=\\\"text-center\\\"> Total Number of Cars {{ total }} </h1>  \\n  </div> \\n    <!-- this total will only run in firefox bcoz we have to add an extension called 'cors everywhere' which runs only in firefox \\n    url called in ts file-->\\n  \\n  <div class=\\\"col-md-4\\\">\\n    <label> Search.. </label>\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)] = \\\"keyword\\\">\\n  </div>\\n</div> \\n<br><br>\\n\\n<div class=\\\"row\\\" *ngFor = \\\"let car of allcar | filter:keyword\\\">\\n  <div class=\\\"col-md-4 form-group\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n      \\n        <div class=\\\"panel-heading text-center\\\">\\n            Model : {{car.model}}\\n            \\n        </div>\\n        <div class=\\\"panel-body\\\"> \\n            <img src=\\\"http://cybotrix.com/ios/img/{{car.image}}\\\" style=\\\" height: 120px; width: 100%;\\\">\\n        </div>\\n\\n      \\n    </div> \\n  </div> <!--4 end-->\\n  \\n  <div class=\\\"col-md-3\\\">\\n      <p>Fuel Type : {{car.name}}</p>\\n      <p>Version : {{car.id}} </p>\\n      <p>Price : {{car.price}} </p>  \\n      <p>Mileage : {{car.mileage}} </p>  \\n      <p> Category : {{car.category.vechicleType}} </p> \\n      <p> Service Done: {{car.status.isServiceDone}} </p>\\n      <p> Boot Size: {{car.bootSize}} </p>\\n </div>\\n\\n  <div class=\\\"col-md-5\\\">\\n      <table class=\\\"table table-bordered\\\">\\n          <caption><strong>Car Service History ---  <u><b class=\\\"text-warning\\\">{{car.serviceHistory.length}} Times</b></u> </strong></caption>\\n          <tr class=\\\"bg-success\\\">\\n            <th class=\\\"text-center\\\">Service Cost</th>\\n            <th class=\\\"text-center\\\">Service Date</th>\\n          </tr>\\n          <tr *ngFor = \\\"let service of car.serviceHistory\\\"> \\n             <td class=\\\"text-center\\\"> {{service.serviceCost}} </td>\\n             <td class=\\\"text-center\\\"> {{service.serviceDate}} </td>\\n          </tr>\\n        </table>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n// import { HttpClient } from '@angular/commom/http';\nimport { HttpClient } from '@angular/common/http';\nimport { getCreationMode } from '@angular/core/src/render3/instructions';\n\n@Component({\n  selector: 'app-externaljson',\n  templateUrl: './externaljson.component.html',\n  styleUrls: ['./externaljson.component.css']\n})\nexport class ExternaljsonComponent implements OnInit {\n\n  constructor(private obj:HttpClient) { }\nkeyword;\n  ngOnInit() {\n    this.getCar();     // to call the function on page load\n  }\n\n  total:number;\n  allcar:string[]=[];\n\n  getCar()\n  {\n    var url = \"http://34.73.45.188:4500/api/getPolicy?type=policynumber\";       \n    //  net required to run this code\n    \n    this.obj.get(url).subscribe (\n      response => {\n        this.allcar = response as string[];\n        this.total = this.allcar.length;\n      }\n    ) ;\n  }\n}\n\n//  this url will only run in firefox bcoz we have to add an extension called 'cors everywhere' which runs only in firefox. \n//  total called in html part","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid footer\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 text-center\\\">\\n      <h3>Angular is best client side Processing.</h3>\\n      <p> it process most of the user input into user computer itself so, application will be always fast. </p>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \" <!-- Fixed navbar -->\\n <nav class=\\\"navbar navbar-default navbar-fixed-top\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Project name</a>\\n    </div>\\n    \\n    <div id=\\\"navbar\\\" class=\\\"navbar-collapse collapse\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li><a routerLink=\\\"dashboard\\\">Home</a></li>\\n        <li><a routerLink=\\\"itemlist\\\">About</a></li>\\n        <li><a routerLink=\\\"computer\\\">Computer</a></li>\\n        <li><a routerLink=\\\"userlist\\\">Userlist</a></li>\\n        <li><a routerLink=\\\"photolist\\\">Photos</a></li>\\n        <li><a routerLink=\\\"carlist\\\">Cars</a></li>\\n      </ul>\\n      \\n    </div><!--/.nav-collapse -->\\n  </div>\\n</nav>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div col-md-12 text-center text-danger>\\n    <h2 class=\\\"text-center\\\"> ngModel Example 1 </h2>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-3\\\"> \\n\\n    <div class=\\\"form-group\\\">\\n      <label> Item Name </label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)] = \\\"pname\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label> Item Price </label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)] = \\\"price\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label> Item Quantity </label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)] = \\\"qty\\\">\\n    </div>\\n\\n    <div class=\\\"text-center\\\">\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\"> {{btntitle}} </button>\\n    </div>\\n  </div>  \\n  <!--3 end -->\\n\\n  <div class=\\\"col-md-9\\\"> \\n    <table class=\\\"table table-bordered\\\"> \\n       <tr>\\n         <th>Item Name</th>\\n         <th>Item Price</th>\\n         <th>Item Quantity</th>\\n       </tr>\\n       <tr *ngFor = \\\"let row of item\\\">   <!--Let any name and array name-->\\n         <td>{{row.Name}}</td>\\n         <td>{{row.Cost}}</td>\\n         <td>{{row.qty}}</td>\\n       </tr>\\n    </table>\\n  </div>  \\n  <!--9 end -->\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.css']\n})\nexport class ItemComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  btntitle:string = \"Save Item\";\n  item:any[] = [\n         {\"Name\":\"Apple\", \"Cost\":200, \"qty\":5},\n         {\"Name\":\"Grapes\", \"Cost\":200, \"qty\":5},\n         {\"Name\":\"Banana\", \"Cost\":200, \"qty\":15},\n         {\"Name\":\"Orange\", \"Cost\":200, \"qty\":20}\n  ];\n\n  pname:string;\n  price:string;\n  qty:string;\n\n  save() \n  {\n   var newitem = {\"Name\":this.pname, \"Cost\":this.price, \"qty\":this.qty};\n    this.item = this.item.concat(newitem);  // to add  in existing array\n    this.pname=\"\";\n    this.price=\"\";\n    this.qty=\"\";\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h1 align=\\\"center\\\" >Total Number of Photos are : {{ total }}</h1>  \\n    <button (click)=\\\"getphoto()\\\" class=\\\"btn btn-primary btn-lg\\\"> Read from JSON file </button>  \\n  </div>\\n</div>\\n<br>\\n\\n<!-- \\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-3\\\" *ngFor = \\\"let row of allphoto\\\">\\n   <div class=\\\"panel panel-primary\\\">\\n     <div class=\\\"panel-heading\\\"> {{ row.title }} </div>\\n     <div class=\\\"panel-body\\\">\\n     <img src=\\\"../../assets/{{ row.url }}\\\" class=\\\"img-responsive img-rounded\\\">\\n     </div>\\n   </div>\\n  </div>\\n</div> -->    \\n \\n<!-- to read this part uncomment the line \\\" // this.getphoto();\\\"    in ts part -->\\n\\n\\n          <!-- or     -->\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-3\\\" *ngFor = \\\"let row of allphoto\\\">\\n    <h4 class=\\\"bg-success text-center\\\"> {{ row.title }} </h4>\\n    <p><img src=\\\"../../assets/{{ row.url }}\\\" class=\\\"img-responsive img-rounded\\\"></p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-photo',\n  templateUrl: './photo.component.html',\n  styleUrls: ['./photo.component.css']\n})\nexport class PhotoComponent implements OnInit {\n\n  constructor(private obj:HttpClient) { }\n\n  ngOnInit() {\n    // this.getphoto();            // to exceute the function on page load\n  }\n\n  allphoto:any[] =[{\"url\":\"H.jpg\", \"title\":\"Default Photo\"}];\n  total : number;\n\n  getphoto()\n  {\n    this.obj.get(\"./assets/photo.json\").subscribe (\n      response => {\n        this.allphoto = response as string[];\n        this.total = this.allphoto.length;\n      }\n    )\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<br>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n      <button (click)=\\\"getuser()\\\" class=\\\"btn btn-primary\\\"> Read from JSON file </button>  \\n    </div>\\n  <div class=\\\"col-md-8\\\">\\n    <h3>Reading Data Using Get Method</h3>\\n  </div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-3\\\" *ngFor = \\\"let row of alluser\\\">\\n    <p> Full Name : {{row.name}} </p>\\n    <p> Mobile No : {{row.mobile}} </p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor(private obj:HttpClient) { }       // object is created\n\n  ngOnInit() {\n  }\n  \n  alluser:any []= [{\"name\":\"zzzzzzz\", \"mobile\":\"7879852565\"}];\n  \n  getuser()  {\n   \n    this.obj.get(\"./assets/user.json\").subscribe(\n      response => {\n        this.alluser = response as string[];    // convert from json to array\n      });\n     \n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}